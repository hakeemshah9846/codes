{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Synnefo\\\\tut\\\\React\\\\my-app\\\\src\\\\Notes\\\\Hooks\\\\useReducer\\\\UseReducerComponent.jsx\",\n  _s = $RefreshSig$();\nimport React, { useReducer } from 'react';\n\n// Reducer function\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst counterReducer = (state, action) => {\n  switch (action.type) {\n    case 'INCREMENT':\n      return {\n        count: state.count + 1\n      };\n    case 'DECREMENT':\n      return {\n        count: state.count - 1\n      };\n    default:\n      return state;\n  }\n};\n\n// Initial state\nconst initialState = {\n  count: 0\n};\n\n// Component using useReducer\nfunction useReducerCounter() {\n  _s();\n  // Destructuring the result of useReducer\n  const [state, dispatch] = useReducer(counterReducer, initialState);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Count: \", state.count]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => dispatch({\n        type: 'INCREMENT'\n      }),\n      children: \"Increment\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => dispatch({\n        type: 'DECREMENT'\n      }),\n      children: \"Decrement\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n}\n_s(useReducerCounter, \"6JWkGZ32UPfojeNx+xqn8ZU8A0Q=\");\nexport default useReducerCounter;","map":{"version":3,"names":["React","useReducer","jsxDEV","_jsxDEV","counterReducer","state","action","type","count","initialState","useReducerCounter","_s","dispatch","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick"],"sources":["C:/Users/User/Synnefo/tut/React/my-app/src/Notes/Hooks/useReducer/UseReducerComponent.jsx"],"sourcesContent":["import React, { useReducer } from 'react';\r\n\r\n// Reducer function\r\nconst counterReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case 'INCREMENT':\r\n      return { count: state.count + 1 };\r\n    case 'DECREMENT':\r\n      return { count: state.count - 1 };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\n// Initial state\r\nconst initialState = { count: 0 };\r\n\r\n// Component using useReducer\r\nfunction useReducerCounter() {\r\n  // Destructuring the result of useReducer\r\n  const [state, dispatch] = useReducer(counterReducer, initialState);\r\n\r\n  return (\r\n    <div>\r\n      <p>Count: {state.count}</p>\r\n      <button onClick={() => dispatch({ type: 'INCREMENT' })}>Increment</button>\r\n      <button onClick={() => dispatch({ type: 'DECREMENT' })}>Decrement</button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default useReducerCounter;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,UAAU,QAAQ,OAAO;;AAEzC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,cAAc,GAAGA,CAACC,KAAK,EAAEC,MAAM,KAAK;EACxC,QAAQA,MAAM,CAACC,IAAI;IACjB,KAAK,WAAW;MACd,OAAO;QAAEC,KAAK,EAAEH,KAAK,CAACG,KAAK,GAAG;MAAE,CAAC;IACnC,KAAK,WAAW;MACd,OAAO;QAAEA,KAAK,EAAEH,KAAK,CAACG,KAAK,GAAG;MAAE,CAAC;IACnC;MACE,OAAOH,KAAK;EAChB;AACF,CAAC;;AAED;AACA,MAAMI,YAAY,GAAG;EAAED,KAAK,EAAE;AAAE,CAAC;;AAEjC;AACA,SAASE,iBAAiBA,CAAA,EAAG;EAAAC,EAAA;EAC3B;EACA,MAAM,CAACN,KAAK,EAAEO,QAAQ,CAAC,GAAGX,UAAU,CAACG,cAAc,EAAEK,YAAY,CAAC;EAElE,oBACEN,OAAA;IAAAU,QAAA,gBACEV,OAAA;MAAAU,QAAA,GAAG,SAAO,EAACR,KAAK,CAACG,KAAK;IAAA;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC3Bd,OAAA;MAAQe,OAAO,EAAEA,CAAA,KAAMN,QAAQ,CAAC;QAAEL,IAAI,EAAE;MAAY,CAAC,CAAE;MAAAM,QAAA,EAAC;IAAS;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAC1Ed,OAAA;MAAQe,OAAO,EAAEA,CAAA,KAAMN,QAAQ,CAAC;QAAEL,IAAI,EAAE;MAAY,CAAC,CAAE;MAAAM,QAAA,EAAC;IAAS;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACvE,CAAC;AAEV;AAACN,EAAA,CAXQD,iBAAiB;AAa1B,eAAeA,iBAAiB"},"metadata":{},"sourceType":"module","externalDependencies":[]}