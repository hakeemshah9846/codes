{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Synnefo\\\\tut\\\\React\\\\my-app\\\\src\\\\Notes\\\\Hooks\\\\useCallback\\\\UseCallbackComponent.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useCallback } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction useCallbackComponent() {\n  _s();\n  const [count, setCount] = useState(0);\n\n  // Define a callback function using useCallback\n  const handleClick = useCallback(() => {\n    setCount(count + 1);\n  }, [count]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Count: \", count]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ChildComponent, {\n      onClick: handleClick\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }, this);\n}\n\n// ChildComponent receives the memoized callback\n_s(useCallbackComponent, \"1cB4ljO+WlCyM3OAm4ykdyUJXqU=\");\nfunction ChildComponent({\n  onClick\n}) {\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    onClick: onClick,\n    children: \"Increment\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 10\n  }, this);\n}\n_c = ChildComponent;\nexport default useCallbackComponent;\nvar _c;\n$RefreshReg$(_c, \"ChildComponent\");","map":{"version":3,"names":["React","useState","useCallback","jsxDEV","_jsxDEV","useCallbackComponent","_s","count","setCount","handleClick","children","fileName","_jsxFileName","lineNumber","columnNumber","ChildComponent","onClick","_c","$RefreshReg$"],"sources":["C:/Users/User/Synnefo/tut/React/my-app/src/Notes/Hooks/useCallback/UseCallbackComponent.jsx"],"sourcesContent":["import React, { useState, useCallback } from 'react';\r\n\r\nfunction useCallbackComponent() {\r\n  const [count, setCount] = useState(0);\r\n\r\n  // Define a callback function using useCallback\r\n  const handleClick = useCallback(() => {\r\n    setCount(count + 1);\r\n  }, [count]);\r\n\r\n  return (\r\n    <div>\r\n      <p>Count: {count}</p>\r\n      {/* Pass the memoized callback to the child component */}\r\n      <ChildComponent onClick={handleClick} />\r\n    </div>\r\n  );\r\n}\r\n\r\n// ChildComponent receives the memoized callback\r\nfunction ChildComponent({ onClick }) {\r\n  return <button onClick={onClick}>Increment</button>;\r\n}\r\n\r\n\r\nexport default useCallbackComponent;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,WAAW,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAErD,SAASC,oBAAoBA,CAAA,EAAG;EAAAC,EAAA;EAC9B,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGP,QAAQ,CAAC,CAAC,CAAC;;EAErC;EACA,MAAMQ,WAAW,GAAGP,WAAW,CAAC,MAAM;IACpCM,QAAQ,CAACD,KAAK,GAAG,CAAC,CAAC;EACrB,CAAC,EAAE,CAACA,KAAK,CAAC,CAAC;EAEX,oBACEH,OAAA;IAAAM,QAAA,gBACEN,OAAA;MAAAM,QAAA,GAAG,SAAO,EAACH,KAAK;IAAA;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAErBV,OAAA,CAACW,cAAc;MAACC,OAAO,EAAEP;IAAY;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACrC,CAAC;AAEV;;AAEA;AAAAR,EAAA,CAjBSD,oBAAoB;AAkB7B,SAASU,cAAcA,CAAC;EAAEC;AAAQ,CAAC,EAAE;EACnC,oBAAOZ,OAAA;IAAQY,OAAO,EAAEA,OAAQ;IAAAN,QAAA,EAAC;EAAS;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAQ,CAAC;AACrD;AAACG,EAAA,GAFQF,cAAc;AAKvB,eAAeV,oBAAoB;AAAC,IAAAY,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}